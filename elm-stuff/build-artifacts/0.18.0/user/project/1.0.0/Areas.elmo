var _user$project$Areas$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _user$project$Areas$collegeRow = function (model) {
	return A2(
		_elm_lang$html$Html$tr,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$td,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(model.college),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$td,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							_elm_lang$core$Basics$toString(model.average)),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Areas$colleges = function (model) {
	return A2(
		_elm_lang$html$Html$article,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h1,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('College Rankings'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$table,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$thead,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$tr,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$th,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text('College'),
												_1: {ctor: '[]'}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$th,
												{ctor: '[]'},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text('Average'),
													_1: {ctor: '[]'}
												}),
											_1: {ctor: '[]'}
										}
									}),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$tbody,
								{ctor: '[]'},
								A2(_elm_lang$core$List$map, _user$project$Areas$collegeRow, model.colleges)),
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Areas$majorRow = function (model) {
	return A2(
		_elm_lang$html$Html$tr,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$td,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(model.major),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$td,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							_elm_lang$core$Basics$toString(model.average)),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Areas$majors = function (model) {
	return A2(
		_elm_lang$html$Html$article,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h1,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Major Rankings'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$table,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$thead,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$tr,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$th,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text('Major'),
												_1: {ctor: '[]'}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$th,
												{ctor: '[]'},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text('Average'),
													_1: {ctor: '[]'}
												}),
											_1: {ctor: '[]'}
										}
									}),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$tbody,
								{ctor: '[]'},
								A2(_elm_lang$core$List$map, _user$project$Areas$majorRow, model.majors)),
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Areas$areaRow = function (model) {
	return A2(
		_elm_lang$html$Html$tr,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$td,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(model.location),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$td,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							_elm_lang$core$Basics$toString(model.average)),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Areas$areas = function (model) {
	return A2(
		_elm_lang$html$Html$article,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h1,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Area Rankings'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$table,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$thead,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$tr,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$th,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text('Location'),
												_1: {ctor: '[]'}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$th,
												{ctor: '[]'},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text('Average'),
													_1: {ctor: '[]'}
												}),
											_1: {ctor: '[]'}
										}
									}),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$tbody,
								{ctor: '[]'},
								A2(_elm_lang$core$List$map, _user$project$Areas$areaRow, model.areas)),
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Areas$view = function (model) {
	var articleStyle = _elm_lang$html$Html_Attributes$style(
		{
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'width', _1: 'auto'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'margin', _1: '2%'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'display', _1: 'flex'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'flexFlow', _1: 'row wrap'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'justifyContent', _1: 'space-between'},
							_1: {ctor: '[]'}
						}
					}
				}
			}
		});
	return A2(
		_elm_lang$html$Html$article,
		{
			ctor: '::',
			_0: articleStyle,
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _user$project$Areas$areas(model),
			_1: {
				ctor: '::',
				_0: _user$project$Areas$majors(model),
				_1: {
					ctor: '::',
					_0: _user$project$Areas$colleges(model),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Areas$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'Areas':
				if (_p0._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{areas: _p0._0._0}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					var _p1 = A2(_elm_lang$core$Debug$log, 'Error is:', _p0._0._0);
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			case 'Majors':
				if (_p0._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{majors: _p0._0._0}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					var _p2 = A2(_elm_lang$core$Debug$log, 'Error is:', _p0._0._0);
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			default:
				if (_p0._0.ctor === 'Ok') {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{colleges: _p0._0._0}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					var _p3 = A2(_elm_lang$core$Debug$log, 'Error is:', _p0._0._0);
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
		}
	});
var _user$project$Areas$initModel = {
	areas: {ctor: '[]'},
	majors: {ctor: '[]'},
	colleges: {ctor: '[]'}
};
var _user$project$Areas$baseUrl = {name: 'http://api.dollartranscript.xyz'};
var _user$project$Areas$Area = F2(
	function (a, b) {
		return {location: a, average: b};
	});
var _user$project$Areas$decodeArea = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'average',
	_elm_lang$core$Json_Decode$int,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'location',
		_elm_lang$core$Json_Decode$string,
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Areas$Area)));
var _user$project$Areas$decodeAreas = _elm_lang$core$Json_Decode$list(_user$project$Areas$decodeArea);
var _user$project$Areas$Major = F2(
	function (a, b) {
		return {major: a, average: b};
	});
var _user$project$Areas$decodeMajor = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'average',
	_elm_lang$core$Json_Decode$int,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'major',
		_elm_lang$core$Json_Decode$string,
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Areas$Major)));
var _user$project$Areas$decodeMajors = _elm_lang$core$Json_Decode$list(_user$project$Areas$decodeMajor);
var _user$project$Areas$College = F2(
	function (a, b) {
		return {college: a, average: b};
	});
var _user$project$Areas$decodeCollege = A3(
	_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
	'average',
	_elm_lang$core$Json_Decode$int,
	A3(
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$required,
		'college',
		_elm_lang$core$Json_Decode$string,
		_NoRedInk$elm_decode_pipeline$Json_Decode_Pipeline$decode(_user$project$Areas$College)));
var _user$project$Areas$decodeColleges = _elm_lang$core$Json_Decode$list(_user$project$Areas$decodeCollege);
var _user$project$Areas$Model = F3(
	function (a, b, c) {
		return {areas: a, majors: b, colleges: c};
	});
var _user$project$Areas$Colleges = function (a) {
	return {ctor: 'Colleges', _0: a};
};
var _user$project$Areas$getColleges = function () {
	var url = A2(_elm_lang$core$Basics_ops['++'], _user$project$Areas$baseUrl.name, 'colleges');
	var request = A2(_elm_lang$http$Http$get, url, _user$project$Areas$decodeColleges);
	return A2(_elm_lang$http$Http$send, _user$project$Areas$Colleges, request);
}();
var _user$project$Areas$Majors = function (a) {
	return {ctor: 'Majors', _0: a};
};
var _user$project$Areas$getMajors = function () {
	var url = A2(_elm_lang$core$Basics_ops['++'], _user$project$Areas$baseUrl.name, 'majors');
	var request = A2(_elm_lang$http$Http$get, url, _user$project$Areas$decodeMajors);
	return A2(_elm_lang$http$Http$send, _user$project$Areas$Majors, request);
}();
var _user$project$Areas$Areas = function (a) {
	return {ctor: 'Areas', _0: a};
};
var _user$project$Areas$getAreas = function () {
	var url = A2(_elm_lang$core$Basics_ops['++'], _user$project$Areas$baseUrl.name, 'areas');
	var request = A2(_elm_lang$http$Http$get, url, _user$project$Areas$decodeAreas);
	return A2(_elm_lang$http$Http$send, _user$project$Areas$Areas, request);
}();
var _user$project$Areas$init = {
	ctor: '_Tuple2',
	_0: _user$project$Areas$initModel,
	_1: _elm_lang$core$Platform_Cmd$batch(
		{
			ctor: '::',
			_0: _user$project$Areas$getAreas,
			_1: {
				ctor: '::',
				_0: _user$project$Areas$getMajors,
				_1: {
					ctor: '::',
					_0: _user$project$Areas$getColleges,
					_1: {ctor: '[]'}
				}
			}
		})
};
var _user$project$Areas$main = _elm_lang$html$Html$program(
	{init: _user$project$Areas$init, update: _user$project$Areas$update, view: _user$project$Areas$view, subscriptions: _user$project$Areas$subscriptions})();
